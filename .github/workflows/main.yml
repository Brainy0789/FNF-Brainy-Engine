# Workflow for Building Brainy Engine

name: Build Brainy Engine

# Triggers
on:
  
  # Manual trigger from the Actions tab
  workflow_dispatch:

jobs:
  buildLinux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4

      - name: Install Haxelib
        run: |
          sudo apt-get install libvlc-dev
          sudo apt-get install libvlccore-dev
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          chmod +x ./setup/unix.sh
          sh ./setup/unix.sh

      - name: Skip SScript setup mode
        run: echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >> ~/settings.cocoa

      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION

      - name: Compile
        run: haxelib run lime build Project.xml linux --app-version="4.0.0-${{ github.run_id}}" -D officialBuild

      - name: Publish Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: linuxBuild
          path: export/release/linux/bin

  buildWindows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4.1.7

    - uses: krdlab/setup-haxe@master
      with:
        haxe-version: 4.3.4

    - name: Install Haxelib
      run: |
        haxelib setup C:/haxelib
        haxelib install hxcpp > nul
        setup/windows.bat
      shell: cmd

    - name: Skip SScript setup mode
      run: echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >> %USERPROFILE%/settings.cocoa
      shell: cmd

    - name: Create Version Tag
      run: echo "${{github.run_id}}" > VERSION

    - name: Compile
      run: haxelib run lime build windows --app-version="4.0.0-${{ github.run_id}}" -D officialBuild

    - name: Publish Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: windowsBuild
        path: export/release/windows/bin


  buildMac13:
    runs-on: macos-13

    steps:
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4

      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          chmod +x ./setup/unix.sh
          sh ./setup/unix.sh

      - name: Skip SScript setup mode
        run: echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >> ~/settings.cocoa

      - name: Set macOS 13 Deployment Target
        run: |
          export MACOSX_DEPLOYMENT_TARGET=13.0

      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION

      - name: Compile
        run: haxelib run lime build mac --app-version="4.0.0-${{ github.run_id}}"  -D officialBuild

      - name: Publish Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: mac13Build
          path: export/release/macos/bin

  buildMacLatest:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4

      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          chmod +x ./setup/unix.sh
          sh ./setup/unix.sh

      - name: Skip SScript setup mode
        run: echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >> ~/settings.cocoa

      - name: Set macOS Latest Deployment Target
        run: |
          export MACOSX_DEPLOYMENT_TARGET=13.0  # Set to latest macOS version (e.g., Ventura)

      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION

      - name: Compile
        run: haxelib run lime build mac --app-version="4.0.0-${{ github.run_id}}"  -D officialBuild

      - name: Publish Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: macLatestBuild
          path: export/release/macos/bin
